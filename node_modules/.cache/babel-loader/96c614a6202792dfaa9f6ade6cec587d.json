{"ast":null,"code":"import React, { useEffect, useContext } from \"react\"; // import { Link } from \"react-router-dom\";\n\nimport { useForm } from \"react-hook-form\";\nimport { GlobalContext } from \"../../context/GlobalState\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  const {\n    userRegistration,\n    isLoading\n  } = useContext(GlobalContext);\n  const {\n    register,\n    handleSubmit,\n    errors,\n    reset\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    userRegistration(data);\n  }; //   useEffect(() => {\n  //     if (isLoading) {\n  //       reset();\n  //     }\n  //     return () => {\n  //       //   cleanup\n  //     };\n  //   }, [isLoading]);\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\nexport default Register;","map":{"version":3,"sources":["C:/React/pichabay/src/components/authorization/Register.js"],"names":["React","useEffect","useContext","useForm","GlobalContext","Register","userRegistration","isLoading","register","handleSubmit","errors","reset","onSubmit","data","console","log"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C,C,CACA;;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,aAAT,QAA8B,2BAA9B;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAAkCL,UAAU,CAACE,aAAD,CAAlD;AAEA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,MAA1B;AAAkCC,IAAAA;AAAlC,MAA4CR,OAAO,EAAzD;;AAEA,QAAMS,QAAQ,GAAIC,IAAD,IAAU;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAP,IAAAA,gBAAgB,CAACO,IAAD,CAAhB;AACD,GAHD,CALqB,CAUrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBAAO,qCAAP;AACD,CApBD;;AAsBA,eAAeR,QAAf","sourcesContent":["import React, { useEffect, useContext } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\n\r\nconst Register = () => {\r\n  const { userRegistration, isLoading } = useContext(GlobalContext);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    userRegistration(data);\r\n  };\r\n\r\n  //   useEffect(() => {\r\n  //     if (isLoading) {\r\n  //       reset();\r\n  //     }\r\n  //     return () => {\r\n  //       //   cleanup\r\n  //     };\r\n  //   }, [isLoading]);\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}