{"ast":null,"code":"import Cookies from \"js-cookie\";\nimport jwt from \"jwt-simple\";\nimport CryptoJS from \"crypto-js\";\nimport { categories } from \"./data\";\nexport const categoryName = id => {\n  // categories;\n  const category = \"Baby\";\n  return category;\n};\nexport const countyName = id => {\n  // categories;\n  const county = \"Baby\";\n  return county;\n};\nexport const encryptData = data => {\n  const ciphertext = CryptoJS.AES.encrypt(JSON.stringify(data), process.env.REACT_APP_SECRET).toString();\n  return ciphertext;\n};\nexport const decryptData = ciphertext => {\n  var bytes = CryptoJS.AES.decrypt(ciphertext, process.env.REACT_APP_SECRET);\n  var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n  return decryptedData;\n};\nexport const addCookie = (payload, cookie_name) => {\n  var date = new Date();\n  date.setTime(date.getTime() + 1 * 3600 * 1000);\n  Cookies.set(cookie_name, payload, {\n    expires: date\n  });\n};\nexport const deleteCookie = () => {\n  var cookie = document.cookie.split(\";\");\n\n  for (var i = 0; i < cookie.length; i++) {\n    var chip = cookie[i],\n        entry = chip.split(\"=\"),\n        name = entry[0];\n    Cookies.remove(name);\n    document.cookie = name + \"=; expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n  }\n};\nexport const readJwt = token => {\n  let value = [];\n  const secret = \"@pichabay_\";\n  value = jwt.decode(token, secret);\n  return value;\n};\nexport const addCommas = num => {\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n};\nexport const sanitizeBookName = name => {\n  return name.replace(/\\s+/g, \"-\").toLowerCase();\n};\nexport const getNumberofWords = description => {\n  const words = description.length;\n  return words;\n};\nexport const capitalizeFirstLetter = str => {\n  const capitalized = str.charAt(0).toUpperCase() + str.slice(1);\n  return capitalized;\n};","map":{"version":3,"sources":["C:/React/pichabay/src/utils/helpers.js"],"names":["Cookies","jwt","CryptoJS","categories","categoryName","id","category","countyName","county","encryptData","data","ciphertext","AES","encrypt","JSON","stringify","process","env","REACT_APP_SECRET","toString","decryptData","bytes","decrypt","decryptedData","parse","enc","Utf8","addCookie","payload","cookie_name","date","Date","setTime","getTime","set","expires","deleteCookie","cookie","document","split","i","length","chip","entry","name","remove","readJwt","token","value","secret","decode","addCommas","num","replace","sanitizeBookName","toLowerCase","getNumberofWords","description","words","capitalizeFirstLetter","str","capitalized","charAt","toUpperCase","slice"],"mappings":"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","sourcesContent":["import Cookies from \"js-cookie\";\r\nimport jwt from \"jwt-simple\";\r\nimport CryptoJS from \"crypto-js\";\r\nimport { categories } from \"./data\";\r\n\r\nexport const categoryName = (id) => {\r\n  // categories;\r\n\r\n  const category = \"Baby\";\r\n\r\n  return category;\r\n};\r\n\r\nexport const countyName = (id) => {\r\n  // categories;\r\n\r\n  const county = \"Baby\";\r\n\r\n  return county;\r\n};\r\n\r\nexport const encryptData = (data) => {\r\n  const ciphertext = CryptoJS.AES.encrypt(\r\n    JSON.stringify(data),\r\n    process.env.REACT_APP_SECRET\r\n  ).toString();\r\n\r\n  return ciphertext;\r\n};\r\n\r\nexport const decryptData = (ciphertext) => {\r\n  var bytes = CryptoJS.AES.decrypt(ciphertext, process.env.REACT_APP_SECRET);\r\n  var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n\r\n  return decryptedData;\r\n};\r\n\r\nexport const addCookie = (payload, cookie_name) => {\r\n  var date = new Date();\r\n\r\n  date.setTime(date.getTime() + 1 * 3600 * 1000);\r\n\r\n  Cookies.set(cookie_name, payload, {\r\n    expires: date,\r\n  });\r\n};\r\n\r\nexport const deleteCookie = () => {\r\n  var cookie = document.cookie.split(\";\");\r\n\r\n  for (var i = 0; i < cookie.length; i++) {\r\n    var chip = cookie[i],\r\n      entry = chip.split(\"=\"),\r\n      name = entry[0];\r\n\r\n    Cookies.remove(name);\r\n\r\n    document.cookie = name + \"=; expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n  }\r\n};\r\n\r\nexport const readJwt = (token) => {\r\n  let value = [];\r\n  const secret = \"@pichabay_\";\r\n\r\n  value = jwt.decode(token, secret);\r\n\r\n  return value;\r\n};\r\n\r\nexport const addCommas = (num) => {\r\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n};\r\n\r\nexport const sanitizeBookName = (name) => {\r\n  return name.replace(/\\s+/g, \"-\").toLowerCase();\r\n};\r\n\r\nexport const getNumberofWords = (description) => {\r\n  const words = description.length;\r\n\r\n  return words;\r\n};\r\n\r\nexport const capitalizeFirstLetter = (str) => {\r\n  const capitalized = str.charAt(0).toUpperCase() + str.slice(1);\r\n\r\n  return capitalized;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}