{"ast":null,"code":"import Cookies from\"js-cookie\";import jwt from\"jwt-simple\";import CryptoJS from\"crypto-js\";import{categories,counties}from\"./data\";export var categoryName=function categoryName(id){var category=categories.filter(function(item){return item.id===id;});console.log(id);return category.name;};export var countyName=function countyName(id){var county=counties.filter(function(l){return l.id===id;});return county.name;};export var encryptData=function encryptData(data){var ciphertext=CryptoJS.AES.encrypt(JSON.stringify(data),process.env.REACT_APP_SECRET).toString();return ciphertext;};export var decryptData=function decryptData(ciphertext){var bytes=CryptoJS.AES.decrypt(ciphertext,process.env.REACT_APP_SECRET);var decryptedData=JSON.parse(bytes.toString(CryptoJS.enc.Utf8));return decryptedData;};export var addCookie=function addCookie(payload,cookie_name){var date=new Date();date.setTime(date.getTime()+1*3600*1000);Cookies.set(cookie_name,payload,{expires:date});};export var deleteCookie=function deleteCookie(){var cookie=document.cookie.split(\";\");for(var i=0;i<cookie.length;i++){var chip=cookie[i],entry=chip.split(\"=\"),name=entry[0];Cookies.remove(name);document.cookie=name+\"=; expires=Thu, 01 Jan 1970 00:00:01 GMT;\";}};export var readJwt=function readJwt(token){var value=[];var secret=\"@pichabay_\";value=jwt.decode(token,secret);return value;};export var addCommas=function addCommas(num){return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g,\"$1,\");};export var sanitizeBookName=function sanitizeBookName(name){return name.replace(/\\s+/g,\"-\").toLowerCase();};export var getNumberofWords=function getNumberofWords(description){var words=description.length;return words;};export var capitalizeFirstLetter=function capitalizeFirstLetter(str){var capitalized=str.charAt(0).toUpperCase()+str.slice(1);return capitalized;};","map":{"version":3,"sources":["C:/React/pichabay/src/utils/helpers.js"],"names":["Cookies","jwt","CryptoJS","categories","counties","categoryName","id","category","filter","item","console","log","name","countyName","county","l","encryptData","data","ciphertext","AES","encrypt","JSON","stringify","process","env","REACT_APP_SECRET","toString","decryptData","bytes","decrypt","decryptedData","parse","enc","Utf8","addCookie","payload","cookie_name","date","Date","setTime","getTime","set","expires","deleteCookie","cookie","document","split","i","length","chip","entry","remove","readJwt","token","value","secret","decode","addCommas","num","replace","sanitizeBookName","toLowerCase","getNumberofWords","description","words","capitalizeFirstLetter","str","capitalized","charAt","toUpperCase","slice"],"mappings":"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","sourcesContent":["import Cookies from \"js-cookie\";\r\nimport jwt from \"jwt-simple\";\r\nimport CryptoJS from \"crypto-js\";\r\nimport { categories, counties } from \"./data\";\r\n\r\nexport const categoryName = (id) => {\r\n  const category = categories.filter((item) => item.id === id);\r\n\r\n  console.log(id);\r\n\r\n  return category.name;\r\n};\r\n\r\nexport const countyName = (id) => {\r\n  const county = counties.filter((l) => l.id === id);\r\n\r\n  return county.name;\r\n};\r\n\r\nexport const encryptData = (data) => {\r\n  const ciphertext = CryptoJS.AES.encrypt(\r\n    JSON.stringify(data),\r\n    process.env.REACT_APP_SECRET\r\n  ).toString();\r\n\r\n  return ciphertext;\r\n};\r\n\r\nexport const decryptData = (ciphertext) => {\r\n  var bytes = CryptoJS.AES.decrypt(ciphertext, process.env.REACT_APP_SECRET);\r\n  var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n\r\n  return decryptedData;\r\n};\r\n\r\nexport const addCookie = (payload, cookie_name) => {\r\n  var date = new Date();\r\n\r\n  date.setTime(date.getTime() + 1 * 3600 * 1000);\r\n\r\n  Cookies.set(cookie_name, payload, {\r\n    expires: date,\r\n  });\r\n};\r\n\r\nexport const deleteCookie = () => {\r\n  var cookie = document.cookie.split(\";\");\r\n\r\n  for (var i = 0; i < cookie.length; i++) {\r\n    var chip = cookie[i],\r\n      entry = chip.split(\"=\"),\r\n      name = entry[0];\r\n\r\n    Cookies.remove(name);\r\n\r\n    document.cookie = name + \"=; expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n  }\r\n};\r\n\r\nexport const readJwt = (token) => {\r\n  let value = [];\r\n  const secret = \"@pichabay_\";\r\n\r\n  value = jwt.decode(token, secret);\r\n\r\n  return value;\r\n};\r\n\r\nexport const addCommas = (num) => {\r\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n};\r\n\r\nexport const sanitizeBookName = (name) => {\r\n  return name.replace(/\\s+/g, \"-\").toLowerCase();\r\n};\r\n\r\nexport const getNumberofWords = (description) => {\r\n  const words = description.length;\r\n\r\n  return words;\r\n};\r\n\r\nexport const capitalizeFirstLetter = (str) => {\r\n  const capitalized = str.charAt(0).toUpperCase() + str.slice(1);\r\n\r\n  return capitalized;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}